#!/bin/sh

jq () {
	if command jq >/dev/null 2>&1; then
		command jq "$@"
	elif command -v jq-windows-amd64.exe >/dev/null 2>&1; then
		jq-windows-amd64.exe "$@"
	else
		echo "jq not found" >&2
	fi
}

validate_circleci_config () {
	if ! git diff --name-only --staged | grep -q 'circleci/config.yml'; then
		echo "circleci/config.yml is not staged for commit, skipping validation..." >&2
		return 0
	fi

	echo "validing CircleCI config..." >&2
	if command -v circleci; then
		circleci config validate
	else
		wsl circleci config validate
	fi
}

validate_version_updated() {
	PACKAGE_VERSION=$(jq -r '.version' package.json)
	TAG_VERSION=$(git tag | tail -1)
	SONAR_PROJECT_VERSION=$(grep -E '^sonar.projectVersion=' sonar-project.properties | cut -d'=' -f2)

	if [ "$PACKAGE_VERSION" = "$TAG_VERSION" ]; then
		echo "package.json version ($PACKAGE_VERSION) matches latest git tag ($TAG_VERSION) and should be updated" >&2
		exit 1
	fi
	if [ "$PACKAGE_VERSION" != "$SONAR_PROJECT_VERSION" ]; then
		echo "package.json version ($PACKAGE_VERSION) does not match 'sonar.projectVersion' ($SONAR_PROJECT_VERSION) in sonar-project.properties" >&2
		exit 1
	fi
}

########## MAIN BLOCK ##########

validate_circleci_config
validate_version_updated
