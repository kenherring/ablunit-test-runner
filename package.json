{
	"name": "ablunit-test-provider",
	"displayName": "ABLUnit Test Runner",
	"description": "OpenEdge ABLUnit support for VSCode",
	"version": "0.1.0",
	"publisher": "kherring",
	"pricing": "Free",
	"private": true,
	"license": "MIT",
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": false
		}
	},
	"badges": [
		{
			"href": "https://sonarcloud.io/api/project_badges/measure?project=kenherring_ablunit-test-provider&metric=sqale_rating",
			"url": "https://sonarcloud.io/summary/new_code?id=kenherring_ablunit-test-provider",
			"description": "SonarCloud Maintainability Rating"
		}
	],
	"keywords": [
		"progress",
		"progress software",
		"openege",
		"abl",
		"ablunit",
		"progress software",
		"pdsoe"
	],
	"repository": "https://github.com/kherring/ablunit-test-provider",
	"bugs": {
		"url": "https://github.coim/kherring/ablunit-test-provider/issues"
	},
	"engines": {
		"vscode": "^1.83.0"
	},
	"categories": [
		"Testing",
		"Snippets"
	],
	"activationEvents": [
		"onStartupFinished",
		"workspaceContains:{**/*.cls,**/*.p}"
	],
	"main": "./out/extension.js",
	"scripts": {
		"compile": "tsc -p ./",
		"lint": "eslint \"src/**/*.ts\"",
		"watch": "tsc -watch -p ./",
		"download-api": "dts main && dts dev",
		"postinstall": "npm run download-api",
		"pretest": "npm run compile",
		"vscode-test": "vscode-test",
		"test": "node ./out/test/runTest.js",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"test-compile": "tsc -p ./",
		"vscode:prepublish": "tsc",
		"vscode:prepublish-esbuild": "npm run esbuild-base -- --minify"
	},
	"devDependencies": {
		"@types/glob": "^8.1.0",
		"@types/jsonminify": "^0.4.1",
		"@types/node": "^16.18.34",
		"@types/xml2js": "^0.4.12",
		"@typescript-eslint/eslint-plugin": "^6.7.0",
		"@typescript-eslint/parser": "^6.7.0",
		"@vscode/dts": "^0.4.0",
		"@vscode/test-cli": "^0.0.4",
		"@vscode/test-electron": "^2.3.6",
		"esbuild": "^0.19.5",
		"eslint": "^8.26.0",
		"mocha": "^10.2.0",
		"mocha-junit-reporter": "^2.2.1",
		"nyc": "^15.1.0",
		"source-map-support": "^0.5.21",
		"typescript": "^5.2.2"
	},
	"contributes": {
		"languages": [
			{
				"id": "abl-procedures",
				"aliases": [
					"OpenEdge ABL",
					"abl",
					"Progress",
					"Progress 4GL"
				],
				"extensions": [
					".p"
				]
			},
			{
				"id": "abl-classes",
				"aliases": [
					"OpenEdge ABL",
					"abl",
					"Progress",
					"Progress 4GL"
				],
				"extensions": [
					".cls"
				]
			}
		],
		"configuration": {
			"type": "object",
			"title": "ABLUnit Test Provider",
			"properties": {
				"ablunit.display.classLabel": {
					"type": "string",
					"default": "classname",
					"enum": [
						"classname",
						"filepath"
					]
				},
				"ablunit.display.style": {
					"type": "string",
					"default": "tree",
					"enum": [
						"tree",
						"flat"
					]
				},
				"ablunit.files.include": {
					"type": "string",
					"default": "**/*.{cls,p}"
				},
				"ablunit.files.exclude": {
					"type": "string",
					"default": "**/.builder/**"
				},
				"ablunit.findAllFilesAtStartup": {
					"type": "boolean",
					"default": true
				},
				"ablunit.importOpenedgeProjectJson": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "import configuration settings from `openedge-project.json` when possible"
				},
				"ablunit.notificationsEnabled": {
					"type": "boolean",
					"default": true
				},
				"ablunit.params": {
					"type": "string",
					"default": "",
					"description": "Additional parameters to pass to the ABLUnit command line (ex: '-pf dbconns.pf')"
				},
				"ablunit.progressIniPath": {
					"type": "string",
					"default": "progress.ini",
					"scope": "window",
					"markdownDescription": "Location of the `progress.ini` file (relative or absolute).  When blank the extension will look for a `progress.ini` file in the repo root before creating one at ${config:ablunit.tempDir}"
				},
				"ablunit.tempDir": {
					"type": "string",
					"default": "",
					"description": "Location of the temporary directory used to store the results.xml file"
				},
				"ablunit.tests.command": {
					"type": "string",
					"default": "",
					"description": "Custom command line executed to run a test"
				},
				"ablunit.tests.command.useABLPluginCommand": {
					"type": "string",
					"default": "",
					"description": "Use a command from the VSCode OpenEdge ABL (vscode-abl/vscode-abl) plugin to run a test",
					"TODO": true
				},
				"ablunit.tests.task": {
					"type": "string",
					"default": "TODO",
					"description": "run tests using the specified task"
				},
				"ablunit.configJson": {
					"type": "object",
					"markdownDescription": "Configuration options for the ABLUnit command line passed to session via the CFG param option [see [Run test cases from the command prompt](https://docs.progress.com/bundle/openedge-developer-studio-help/page/Run-test-cases-from-the-command-prompt.html)",
					"properties": {
						"configPath": {
							"type": "string",
							"default": "ablunit.json",
							"description": "CFG=<file>"
						},
						"outputLocation": {
							"type": "string",
							"default": "",
							"description": "Location of the outputted results.xml file (directory only, filename will always be 'results.xml')"
						},
						"outputWriteJson": {
							"type": "boolean",
							"default": false,
							"description": "Write the results to a json file.  Default location is the same directory as results.xml"
						},
						"quitOnEnd": {
							"type": "boolean",
							"default": true,
							"description": "Quit the session when the test run is complete"
						},
						"writeLog": {
							"type": "boolean",
							"default": true,
							"description": "Start the session with logging enabled"
						},
						"showErrorMessage": {
							"type": "boolean",
							"default": true,
							"description": "TODO"
						},
						"throwError": {
							"type": "boolean",
							"default": true,
							"description": "TODO"
						}
					}
				},
				"ablunit.profilerOptions": {
					"type": "object",
					"markdownDescription": "Options for the profiler. For more information:\n\n  * See the[`-profile`](https://docs.progress.com/bundle/openedge-startup-and-parameter-reference-122/page/Profiler-profile.html) command line parameters\n  * See the [`PROFILER`](https://docs.progress.com/bundle/abl-reference/page/PROFILER-system-handle.html) system handle",
					"properties": {
						"optionsPath": {
							"type": "string",
							"default": "profile.options",
							"markdownDescription": "Location of the outputted profile.options file (see [`-profile`](https://docs.progress.com/bundle/openedge-startup-and-parameter-reference-122/page/Profiler-profile.html))"
						},
						"enabled": {
							"type": "boolean",
							"default": true,
							"markdownDescription": "Enable the profiler.  (see the [`PROFILER:PROFILING`](https://docs.progress.com/bundle/abl-reference/page/PROFILING-attribute.html) attribute"
						},
						"description": {
							"type": "string",
							"default": "Unit Tests Run via ABLUnit Test Provider (VSCode)",
							"description": "Description of the profiler run (see the [`PROFILER:DESCRIPTION`](https://docs.progress.com/bundle/abl-reference/page/DESCRIPTION-attribute.html) attribute)"
						},
						"filename": {
							"type": "string",
							"default": "prof.out",
							"description": "Location of the profiler results (`-outfile <outfile>`) (see the [`PROFILER:FILE-NAME`](https://docs.progress.com/bundle/abl-reference/page/DIRECTORY-attribute.html) attribute)"
						},
						"listings": {
							"type": "string",
							"default": "listings",
							"description": "Flag to output debug listings (`-listings`) (see the [`PROFILER:LISTINGS`](https://docs.progress.com/bundle/abl-reference/page/LISTINGS-attribute.html) attribute)"
						},
						"statistics": {
							"type": "boolean",
							"default": false,
							"description": "Flag to output statistics (-statistics) (see the [`PROFILER:STATISTICS`](https://docs.progress.com/bundle/abl-reference/page/STATISTICS-attribute.html) attribute)"
						},
						"traceFilter": {
							"type": "string",
							"default": "",
							"description": "Comma-separated string that uses wildcard matching for any procedure or class you want trace (`-trace-filter <string>`) (see the [`PROFILER:TRACE-FILTER`](https://docs.progress.com/bundle/abl-reference/page/TRACE-FILTER-attribute.html) attribute)"
						},
						"tracing": {
							"type": "string",
							"default": "",
							"description": "Comma-separated string of procedure and line number pairs. A pipe (|) separates the procedure name and line number. For example, \"test1|32,test2|17\" (`-tracing <string>`) (see the [`PROFILER:TRACING`](https://docs.progress.com/bundle/abl-reference/page/TRACING-attribute.html) attribute)"
						},
						"writeJson": {
							"type": "boolean",
							"default": "false",
							"description": "Output the results in JSON format after parsing.  Writes to a file by the same name as the `filename` option, but with a `.json` extension (default: `prof.json`)"
						}
					}
				}
			}
		},
		"commands": [],
		"snippets": [
			{
				"language": "abl-procedures",
				"path": "./snippets-procedures.json"
			},
			{
				"language": "abl-classes",
				"path": "./snippets-classes.json"
			}
		]
	},
	"dependencies": {
		"jsonminify": "^0.4.2",
		"xml2js": "^0.6.2"
	}
}
