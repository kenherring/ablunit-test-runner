{
	"name": "ablunit-test-provider",
	"displayName": "ABLUnit Test Runner",
	"description": "OpenEdge ABLUnit test runner for VSCode",
	"version": "0.1.7",
	"publisher": "kherring",
	"pricing": "Free",
	"private": true,
	"icon": "resources/images/icon_128.png",
	"author": "Ken Herring",
	"qna": false,
	"homepage": "https://github.com/kenherring/ablunit-test-provider/blob/main/README.md",
	"repository": {
		"url": "https://github.com/kenherring/ablunit-test-provider"
	},
	"bugs": {
		"url": "https://github.com/kenherring/ablunit-test-provider/issues"
	},
	"license": "MIT",
	"licenses": [
		{
			"type": "MIT",
			"url": "https://github.com/kenherring/ablunit-test-provider/blob/main/LICENSE"
		}
	],
	"badges": [
		{
			"href": "https://dl.circleci.com/status-badge/redirect/gh/kenherring/ablunit-test-provider/tree/main",
			"url": "https://img.shields.io/circleci/build/github/kenherring/ablunit-test-provider/main?logo=circleci",
			"description": "CircleCI Build Status"
		},
		{
			"href": "https://sonarcloud.io/summary/new_code?id=kenherring_ablunit-test-provider",
			"url": "https://sonarcloud.io/api/project_badges/measure?project=kenherring_ablunit-test-provider&metric=sqale_rating",
			"description": "SonarCloud Maintainability Rating"
		},
		{
			"href": "https://sonarcloud.io/summary/new_code?id=kenherring_ablunit-test-provider",
			"url": "https://sonarcloud.io/api/project_badges/measure?project=kenherring_ablunit-test-provider&metric=coverage",
			"description": "SonarCloud Coverage"
		}
	],
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": false
		}
	},
	"keywords": [
		"4gl",
		"abl",
		"abl unit",
		"ablunit",
		"ablunit-test-provider",
		"ablunit-test-runner",
		"oeunit",
		"openedge",
		"pdsoe",
		"progress software",
		"progress"
	],
	"engines": {
		"vscode": "^1.83.0"
	},
	"categories": [
		"Testing"
	],
	"activationEvents-coverage": [
		"onStartupFinished"
	],
	"activationEvents": [
		"onStartupFinished",
		"workspaceContains:{**/*.cls,**/*.p,.vscode/ablunit-test-profile.json}"
	],
	"main": "./out/extension",
	"scripts": {
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
		"build": "npm run esbuild",
		"clean": "sh -c scripts/cleanup.sh",
		"clean-and-compile": "npm run clean && npm run compile",
		"compile": "npm run esbuild",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"package": "vsce package --pre-release",
		"package-release": "vsce package",
		"posttest": "npm run test:cov-after",
		"pretest": "npm run test-compile && npm run test:cov-before && sh -c test_projects/setup.sh",
		"test-compile": "tsc -p ./",
		"test-clean-compile": "npm run clean && tsc -p ./",
		"test": "node ./out/test/runTest.js && echo \"'npm test' success\" || npm run test-failed",
		"test-failed": "sh -c scripts/npm-test-failed.sh",
		"test:cov-before": "sed -i 's/\"activationEvents\"/\"activationEvents-vscode\"/g;s/\"activationEvents-coverage\"/\"activationEvents\"/g' package.json",
		"test:cov-after": "sed -i 's/\"activationEvents\"/\"activationEvents-coverage\"/g;s/\"activationEvents-vscode\"/\"activationEvents\"/g' package.json && echo 200 || echo 201",
		"test:install-and-run": "npm run package && cd dummy-ext && npm run test:install-and-run",
		"vscode-test": "vscode-test",
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"watch": "npm run esbuild-watch",
		"watch-tsc": "tsc -p ./ -w"
	},
	"dependencies": {
		"xml2js": "^0.6.2"
	},
	"devDependencies": {
		"@types/glob": "^8.1.0",
		"@types/node": "^16.18.34",
		"@types/vscode": "^1.83.0",
		"@types/xml2js": "^0.4.12",
		"@typescript-eslint/eslint-plugin": "^6.13.2",
		"@typescript-eslint/parser": "^6.13.2",
		"@vscode/test-cli": "^0.0.4",
		"@vscode/test-electron": "^2.3.8",
		"esbuild": "^0.19.8",
		"eslint": "^8.55.0",
		"mocha": "^10.2.0",
		"mocha-junit-reporter": "^2.2.1",
		"mocha-multi-reporters": "^1.5.1",
		"nyc": "^15.1.0",
		"typescript": "^5.3.3"
	},
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "OpenEdge - ABLUnit Test Runner",
			"properties": {
				"ablunit.discoverFilesOnActivate": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "For large workspaces this may improve performance by loading test files as they are used instead of all at once"
				},
				"ablunit.explorer.classlabel": {
					"type": "string",
					"title": "Class Label",
					"default": "filepath",
					"enum": [
						"class-type-name",
						"filepath"
					],
					"markdownEnumDescriptions": [
						"**example:** `class.path.className`",
						"**example:** `class/path/className.cls`"
					],
					"markdownDescription": "Label style for test class files in the test explorer view. <br><br>Example styles for `com/example/myClass.cls`:\n<ul><li>class-type-name\\: `com.example.myClass`</li><li>filename\\: `myClass.cls`</li></ul>"
				},
				"ablunit.files.include": {
					"type": "array",
					"default": [
						"**/*.{cls,p}"
					],
					"markdownDescription": "Glob patterns to include test files"
				},
				"ablunit.files.exclude": {
					"type": "array",
					"default": [
						"**/.builder/**,**/.pct/**"
					],
					"markdownDescription": "Glob patterns to exclude test files"
				},
				"ablunit.importOpenedgeProjectJson": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Import configuration from `openedge-project.json` when possible"
				},
				"ablunit.notificationsEnabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show notifications when a test run starts/completes"
				},
				"ablunit.debugEnabled": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Enable debug level logging for the extension"
				}
			}
		},
		"languages": [
			{
				"id": "abl-procedure",
				"extensions": [
					".p"
				]
			},
			{
				"id": "abl-class",
				"extensions": [
					".cls"
				]
			},
			{
				"id": "jsonc",
				"filenames": [
					"ablunit-test-profile.json"
				],
				"filenamePatterns": [
					"ablunit-test-profile.*.json"
				]
			}
		],
		"jsonValidation": [
			{
				"fileMatch": [
					"**/ablunit-test-profile*.json"
				],
				"url": "./resources/ablunit-test-profile.schema.json"
			}
		],
		"snippets": [
			{
				"language": "abl-procedure",
				"path": "./snippets-procedures.json"
			},
			{
				"language": "abl-class",
				"path": "./snippets-classes.json"
			}
		]
	}
}
