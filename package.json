{
	"name": "ablunit-test-provider",
	"displayName": "ABLUnit Test Runner",
	"description": "OpenEdge ABLUnit support for VSCode",
	"version": "0.0.1",
	"publisher": "kenherring",
	"private": true,
	"license": "MIT",
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": false
		}
	},
	"repository": "https://github.com/kherring/ablunit-test-provider",
	"bugs": {
		"url": "https://github.coim/kherring/ablunit-test-provider/issues"
	},
	"enabledApiProposals": [
		"testCoverage"
	],
	"engines": {
		"vscode": "^1.68.0"
	},
	"categories": [
		"Testing"
	],
	"activationEvents": [
		"workspaceContains:{**/*.cls,**/*.p}"
	],
	"main": "./out/extension.js",
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint \"src/**/*.ts\"",
		"watch": "tsc -watch -p ./",
		"download-api": "dts main && dts dev",
		"postinstall": "npm run download-api"
	},
	"devDependencies": {
		"@types/node": "^16.18.34",
		"@types/xml2js": "^0.4.12",
		"@typescript-eslint/eslint-plugin": "^6.7.0",
		"@typescript-eslint/parser": "^6.7.0",
		"@vscode/dts": "^0.4.0",
		"eslint": "^8.26.0",
		"typescript": "^5.2.2"
	},
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "ABLUnit Configuration",
			"properties": {
				"ablunit.display.classLabel": {
					"type": "string",
					"default": "classname",
					"enum": [
						"classname",
						"filepath"
					]
				},
				"ablunit.display.style": {
					"type": "string",
					"default": "tree",
					"enum": [
						"tree",
						"flat"
					]
				},
				"ablunit.files.include": {
					"type": "string",
					"default": "**/*.{cls,p}"
				},
				"ablunit.files.exclude": {
					"type": "string",
					"default": "**/.builder/**"
				},
				"ablunit.findAllFilesAtStartup": {
					"type": "boolean",
					"default": true
				},
				"ablunit.notificationsEnabled": {
					"type": "boolean",
					"default": true
				},
				"ablunit.importOpenedgeProjectJson": {
					"type": "boolean",
					"default": true,
					"description": "import configuration settings from openedge-project.json when possible"
				},
				"ablunit.params": {
					"type": "string",
					"default": "",
					"description": "Additional parameters to pass to the ABLUnit command line (ex: '-pf dbconns.pf')"
				},
				"ablunit.progressIniPath": {
					"type": "string",
					"description": "Location of the progress.ini file (relative or absolute)"
				},
				"ablunit.resultsPath": {
					"type": "string",
					"default": "results.xml",
					"description": "Location of the outputted results.xml file"
				},
				"ablunit.profileOptionsPath": {
					"type": "string",
					"default": "profile.options",
					"description": "Location of the outputted profile.options file (see -profile startup parameter)"
				},
				"ablunit.profileOutputPath": {
					"type": "string",
					"default": "prof.out",
					"description": "Location of the profiler results"
				},
				"ablunit.tempDir": {
					"type": "string",
					"description": "Location of the temporary directory used to store the results.xml file"
				},
				"ablunit.tests.command": {
					"type": "string",
					"default": "",
					"description": "Custom command line executed to run a test"
				},
				"ablunit.tests.command.useABLPluginCommand": {
					"type": "string",
					"default": "",
					"description": "Use a command from the VSCode OpenEdge ABL (vscode-abl/vscode-abl) plugin to run a test"
				},
				"ablunit.tests.task": {
					"type": "string",
					"default": "TODO",
					"descriptiont": "run tests using the specified task"
				}
			}
		},
		"commands": [
			{
				"command": "ablunit.test.runActive",
				"title": "ABLUnit: run tests from the active file",
				"description": "Run all tests in the active file"
			},
			{
				"command": "ablunit.test.runAll",
				"title": "ABLUnit: run all tests for the workspace",
				"description": "Run all tests for the workspace"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "abl.runProgres.currentFile",
					"when": "editorLangId == 'abl'"
				},
				{
					"command": "abl.test",
					"when": "editorLangId == 'abl'"
				},
				{
					"command": "abl.test.currentFile",
					"when": "editorLangId == 'abl'"
				}
			]
		},
		"snippets": [
			{
				"language": "abl",
				"path": "./snippets.json"
			}
		]
	},
	"dependencies": {
		"xml2js": "^0.6.2"
	}
}
