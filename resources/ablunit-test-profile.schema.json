{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"type": "object",
	"uniqueItems": true,
	"properties": {
		"configurations": {
			"type": "array",
			"uniqueItems": true,
			"maxItems": 1,
			"default": [],
			"items": {
				"type": "object",
				"uniqueItems": true,
				"default": [
					{
						"tempDir": "${workspaceFolder}",
						"profiler": {
							"enabled": true,
							"coverage": true
						}
					}
				],
				"additionalProperties": false,
				"properties": {
					"tempDir": {
						"type": "string",
						"minLength": 1,
						"default": "${workspaceFolder}",
						"description": "Path to temporary directory (-T).  Written to by both the extension and the OpenEdge test execution process."
					},
					"importOpenedgeProjectJson": {
						"type": "boolean",
						"default": true,
						"description": "Import the propath and database connection settings from 'openedge-project.json' possible."
					},
					"openedgeProjectProfile": {
						"type": "string",
						"default": "default",
						"description": "The profile to use from 'openedge-project.json'.  Only used when 'importOpenedgeProjectJson' is true.  When not defined the selected profile for the OpenEdge ABL extension is used (`.vscode/profile.json`)",
						"markdownDescription": "The profile to use from `openedge-project.json`.  Only used when 'importOpenedgeProjectJson' is true.  When not defined the selected profile for the OpenEdge ABL extension is used (`.vscode/profile.json`)"
					},
					"timeout": {
						"type": "number",
						"default": 30000,
						"minimum": 0,
						"description": "Timeout in milliseconds for the test run.  Set to 0 to disable."
					},
					"options": {
						"type": [ "object", "null" ],
						"description": "Options passed to the OE test runner via the 'ablunit.json' file.  Set to null to prevent the creation of 'ablunit.json' or related args passed to the command line.\n\n*[Run test cases from the command prompt](https://docs.progress.com/bundle/openedge-developer-studio-help/page/Run-test-cases-from-the-command-prompt.html)",
						"markdownDescription": "Options passed to the OE test runner via the `ablunit.json` file.  Set to null to prevent the creation of `ablunit.json` or related args passed to the command line.\n\n*[Run test cases from the command prompt](https://docs.progress.com/bundle/openedge-developer-studio-help/page/Run-test-cases-from-the-command-prompt.html)",
						"default": {
							"output": {
								"location": "${tempDir}",
								"filename": "results.xml",
								"format": "xml",
								"writeJson": false,
								"updateFile": "updates.log"
							},
							"quitOnEnd": true,
							"writeLog": false,
							"showErrorMessage": true,
							"throwError": true
						},
						"additionalProperties": false,
						"additionalItems": false,
						"properties": {
							"output": {
								"type": "object",
								"description": "Options for test result output.",
								"additionalProperties": false,
								"properties": {
									"location": {
										"type": "string",
										"description": "Output directory for test results.",
										"default": "${tempDir}"
									},
									"filename": {
										"type": "string",
										"description": "Output filename for test results.  If the value does not end with '.xml' it will be appended.",
										"default": "results.xml"
									},
									"format": {
										"type": "string",
										"description": "Output file extension(s) for results output.  'xml' is required and the default value.  'json' is optional.  The ABLUnit Test Runner VSCode extension performs the xml=>json conversion.",
										"enum": [ "xml" ],
										"default": "xml"
									},
									"writeJson": {
										"type": "boolean",
										"default": false,
										"description": "Write a JSON file containing the parsed results data.  The file will be written to the same directory as `results.xml`."
									},
									"updateFile": {
										"type": "string",
										"description": "Output file to monitor status of the test run.",
										"default": "updates.log"
									}
								}
							},
							"debug": {
								"type": "boolean",
								"default": false
							},
							"quitOnEnd": {
								"type": "boolean",
								"default": true
							},
							"writeLog": {
								"type": "boolean",
								"default": false
							},
							"showErrorMessage": {
								"type": "boolean",
								"default": true
							},
							"throwError": {
								"type": "boolean",
								"default": true
							},
							"xref": {
								"type": "object",
								"description": "Options related to xref files",
								"additionalProperties": false,
								"properties": {
									"useXref": {
										"type": "boolean",
										"default": false,
										"description": "Enable xref usage"
									},
									"xrefLocation": {
										"type": "string",
										"default": "${workspaceFolder}",
										"description": "Location of xref file"
									},
									"xrefExtension": {
										"type": "string",
										"default": "xref",
										"description": "Extension of xref file"
									},
									"xrefThrowError": {
										"type": "boolean",
										"default": false,
										"description": "Throw an error if xref file is not found"
									}
								}
							}
						}
					},
					"profiler": {
						"type": [ "object", "null" ],
						"description": "Options passed to the OE test runner via `-profile <options-file>`.  Set to null to prevent the creation of the options file or args passed to the command line.",
						"markdownDescription": "Options passed to the OE test runner via `-profile <options-file>`.  Set to null to prevent the creation of the options file or args passed to the command line.\n\n* [`PROFILER` system handle](https://docs.progress.com/bundle/abl-reference/page/PROFILER-system-handle.html)\n* [Profiler (`-profile`) startup parameter](https://docs.progress.com/bundle/openedge-startup-and-parameter-reference/page/Profiler-profile.html)",
						"default": {
							// When running tests w/ coverage the following options are automatically added.
							"enabled": true,
							"coverage": true
						},
						"additionalProperties": false,
						"properties": {
							"enabled": {
								"type": "boolean",
								"default": true,
								"description": "Enable the profiler by passing `-profile <options-file>` to the OE test runner.",
								"markdownDescription": "Enable the profiler by passing `-profile <options-file>` to the OE test runner.\n\n* [`ENABLED` attribute](https://docs.progress.com/bundle/abl-reference/page/ENABLED-attribute.html)"
							},
							"coverage": {
								"type": "boolean",
								"default": false,
								"description": "Enable code coverage logging by the profiler.",
								"markdownDescription": "Enable code coverage logging by the profiler.\n\n* [`COVERAGE` attribute](https://docs.progress.com/bundle/abl-reference/page/COVERAGE-attribute.html)"
							},
							"description": {
								"type": "string",
								"default": "VSCode Test Run - ABLUnit Test Runner",
								"description": "Description outputted as header information by the `PROFILER` system handle.",
								"markdownDescription": "Description outputted as header information by the `PROFILER` system handle.\n\n* [`DESCRIPTION` attribute](https://docs.progress.com/bundle/abl-reference/page/DESCRIPTION-attribute.html)"
							},
							"filename": {
								"type": "string",
								"default": "${tempDir}/prof.out",
								"description": "Filepath where profiler data is written by the `PROFILER` system handle.  When the value is a directory a filename of 'prof.out' will be used.",
								"markdownDescription": "Filepath where profiler data is written by the [`PROFILER` system handle](https://docs.progress.com/bundle/abl-reference/page/PROFILER-system-handle.html).  When the value is a directory a filename of 'prof.out' will be used.\n\n* [`FILENAME` attribute](https://docs.progress.com/bundle/abl-reference/page/FILENAME-attribute.html)"
							},
							"listings": {
								"anyOf": [
									{ "type": "boolean" },
									{ "type": "string" }
								],
								"default": false,
								"description": "Include source code listings in the profiler output.  Output directory: `\"{tempDir}/listings\"`",
								"markdownDescription": "Include source code listings in the profiler output.  Output directory: `\"{tempDir}/listings\"`\n\n* [`LISTINGS` attribute](https://docs.progress.com/bundle/abl-reference/page/LISTINGS-attribute.html)"
							},
							"statistics": {
								"type": "boolean",
								"default": false,
								"description": "Include statistics in the profiler output.",
								"markdownDescription": "Include statistics in the profiler output.\n\n* [`STATISTICS` attribute](https://docs.progress.com/bundle/abl-reference/page/STATISTICS-attribute.html)"
							},
							"traceFilter": {
								"type": "string",
								"default": "",
								"description": "Filter for tracing.  See OpenEdge documentation for details.",
								"markdownDescription": "Filter for tracing.\n\n* [`TRACE-FILTER` attribute](https://docs.progress.com/bundle/abl-reference/page/TRACE-FILTER-attribute.html)"
							},
							"tracing": {
								"type": "string",
								"default": false,
								"description": "Include tracing in the profiler output.",
								"markdownDescription": "Include tracing in the profiler output.\n\n* [`TRACING` attribute](https://docs.progress.com/bundle/abl-reference/page/TRACING-attribute.html)"
							},
							"writeJson": {
								"type": "boolean",
								"default": false,
								"description": "Write a JSON file containing the parsed profiler data.  The file will be written to the same directory `filename` property.",
								"markdownDescription": "Write a JSON file containing the parsed profiler data.  The file will be written to the same directory `filename` property."
							},
							"perTest": {
								"type": "boolean",
								"default": true,
								"description": "Output profiler data for each test case to a separate file for more granular analysis",
								"markdownDescription": "Output profiler data for each test case to a separate file for more granular analysis"
							},
							"ignoreExternalCoverage": {
								"type": "boolean",
								"default": true,
								"description": "Ignore external code when analyzing profile output for code coverage",
								"markdownDescription": "Ignore external code when analyzing profile output for code coverage"
							}
						}
					},
					"command": {
						"type": "object",
						"description": "Options related to the command line executable",
						"additionalProperties": false,
						"properties": {
							"executable": {
								"type": "string",
								"default": "_progres",
								"description": "Program to execute.  Typically an OpenEdge executable, but could be something like `ant` or another script to launch your test suite.",
								"minLength": 1
							},
							"progressIni": {
								"type": "string",
								"default": "",
								"nullable": true,
								"description": "Deprecated",
								"markdownDescription": "Deprecated\n\n~~Windows only. Path to ini configuration file. Appended to test run execution with command line arguments: `-basekey INI -basename <progressIni>`.  Set to `null` to disable.~~"
							},
							"batch": {
								"type": "boolean",
								"default": true,
								"description": "batch mode (-b)"
							},
							"debugHost": {
								"type": "string",
								"default": "localhost",
								"minLength": 3,
								"description": "Host to use for debugging. (default: localhost)"
							},
							"debugPort": {
								"type": "integer",
								"default": 3199,
								"minimum": 0,
								"description": "Port to use for debugging."
							},
							"debugConnectMaxWait": {
								"type": "integer",
								"default": 30000,
								"minimum": 1000,
								"description": "Max time to wait for a connection to the debug port."
							},
							"additionalArgs": {
								"type": "array",
								"default": [],
								"description": "Additional args passed to the command line. Appended to ``extraParameters` defined in `openedge-project.json`.",
								"items": { "type": "string" }
							}
						}
					}
				}
			}
		}
	}
}
