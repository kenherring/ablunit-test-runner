{
	"@Test procedure": {
		"prefix": "@Test procedure",
		"body": [
			"@Test.",
			"procedure ${1:testProcedureName} :",
			"  ${2:Assert:Equals(1,2).}",
			"end procedure."
		],
		"description": "A procedure that is a test procedure",
		"scope": "abl"
	},
	"@Setup procedure": {
		"prefix": "@Setup procedure",
		"body": [
			"@Setup.",
			"procedure beforeAll :",
			"  // Executes before each test",
			"  ${1:// do setup here}",
			"end procedure."
		],
		"description": "Executes the procedure before each test. This annotation prepares the test environment such as reading input data or initializing the class.",
		"scope": "abl"
	},
	"@BeforeAll procedure": {
		"prefix": "@BeforeAll procedure",
		"body": [
			"@BeforeAll.",
			"procedure beforeAll :",
			"  // Executes before each test",
			"  ${1:// do setup here}",
			"end procedure."
		],
		"description": "Executes the procedure before each test. This annotation prepares the test environment such as reading input data or initializing the class.",
		"scope": "abl"
	},
	"@Before procedure": {
		"prefix": "@Before procedure",
		"body": [
			"@BeforeEach.",
			"procedure beforeEach :",
			"  // Executes once per program before the start of all tests",
			"  ${1:// do setup here}",
			"end procedure."
		],
		"description": "Executes the procedure once per program, before the start of all tests. This annotation can be used to perform time-sensitive activities such as connecting to a database.",
		"scope": "abl"
	},
	"@BeforeEach procedure": {
		"prefix": "@BeforeEach procedure",
		"body": [
			"@BeforeEach.",
			"procedure beforeEach :",
			"  // Executes once per program before the start of all tests",
			"  ${1:// do setup here}",
			"end procedure."
		],
		"description": "Executes the procedure once per program, before the start of all tests. This annotation can be used to perform time-sensitive activities such as connecting to a database.",
		"scope": "abl"
	},
	"@TearDown procedure": {
		"prefix": "@TearDown procedure",
		"body": [
			"@TearDown.",
			"procedure afterEach :",
			"  // Executes after each test",
			"  ${1:// do some cleanup here}",
			"end procedure."
		],
		"description": "Executes the procedure after each test. This annotation cleans up the test environment such as deleting temporary data or restoring defaults.",
		"scope": "abl"
	},
	"@AfterEach procedure": {
		"prefix": "@AfterEach procedure",
		"body": [
			"@AfterEAch.",
			"procedure afterEach :",
			"  // Executes after each test",
			"  ${1:// do some cleanup here}",
			"end procedure."
		],
		"description": "Executes the procedure after each test. This annotation cleans up the test environment such as deleting temporary data or restoring defaults.",
		"scope": "abl"
	},
	"@AfteraLL procedure": {
		"prefix": "@After procedure",
		"body": [
			"@After.",
			"procedure afterAll :",
			"  // Executes once after all the tests are executed",
			"end procedure."
		],
		"description": "Executes the procedure once, after all the tests are executed. This annotation is used to perform clean-up activities such as disconnecting from a database.",
		"scope": "abl"
	},
	"@AfterAll procedure": {
		"prefix": "@AfterAll procedure",
		"body": [
			"@AfterAll,",
			"procedure afterAll :",
			"  // Executes once after all the tests are executed",
			"end procedure."
		],
		"description": "Executes the procedure once, after all the tests are executed. This annotation is used to perform clean-up activities such as disconnecting from a database.",
		"scope": "abl"
	},
	"@Test procedure exception": {
		"prefix": "@Test procedure exception",
		"body": [
			"@Test (expected=\"${1:ExceptionType}\")",
			"procedure testExceptionProc :",
			"  ${2:runProcThrowsException().} //Throws ${1}",
			"end procedure."
		],
		"description": "Fails the test if the procedure does not throw the exception mentioned in the expected attribute.",
		"scope": "abl"
	}
}
