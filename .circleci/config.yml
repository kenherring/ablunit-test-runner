version: 2.1

orbs:
  shellcheck: circleci/shellcheck@3.2.0
  sonarcloud: sonarsource/sonarcloud@2.0.0

parameters:
  cache-version:
    type: string
    default: v4

oe-version-param: &oe-version-param
  parameters:
    oe-version:
      type: string
      enum: [ '12.2.12', '12.7.0' ]
      default: '12.2.12'
context-and-filters: &context-and-filters
  context:
    - DockerHub
    - PROGRESS_CFG
    - SonarCloud
    - Azure_PAT
  filters:
    tags: ## all tags starting with 'v' (all branches also included by default)
      only:
        - /^v.*/
store-artifacts: &store-artifacts
  - store_artifacts:
      when: always
      path: artifacts

executors:
  psc-primary:
    docker:
      - image: kherring/ablunit-test-runner:12.2.12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN

commands:
  restore-package-cache:
    steps:
      - restore_cache:
          keys:
            - << pipeline.parameters.cache-version >>-cache-{{ checksum "package.json" }}
            - << pipeline.parameters.cache-version >>-cache-
  save-package-cache:
    steps:
      - save_cache:
          key: << pipeline.parameters.cache-version >>-cache-{{ checksum "package.json" }}
          paths: [ /home/circleci/cache/node_modules_cache ]
  restore-test-cache:
    parameters:
      oe-version:
        type: string
        default: none
    steps:
      - when:
          condition: true
          steps:
            - run: tr ' ' '\n' \<<< "$PROGRESS_CFG_BASE64" | base64 --decode > /psc/dlc/progress.cfg
            - restore_cache:
                keys:
                  - << pipeline.parameters.cache-version >>-cache-<< parameters.oe-version >>-{{ checksum "package.json" }}
  save-test-cache:
    parameters:
      oe-version:
        type: string
        default: none
    steps:
      - save_cache:
          key: << pipeline.parameters.cache-version >>-cache-<< parameters.oe-version >>-{{ checksum "package.json" }}
          paths: [ cache ]
  persist-to-workspace:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - ./*.vsix
            - ./dist
            - ./out
  store-test-results:
    parameters:
      directory:
        type: string
        default: artifacts
    steps:
      - store_test_results:
          path: << parameters.directory >>

workflows:
  build:
    jobs:
      - shellcheck/check
      - package:
          <<: *context-and-filters
      - test-and-scan:
          <<: *context-and-filters
          matrix:
            parameters:
              oe-version: [ 12.2.12, 12.7.0 ]
          requires: [ 'package' ]
      - install-and-run:
          <<: *context-and-filters
          requires: [ 'package' ]
      - publish:
          filters: ## ignore branches; build only tags
            branches: { ignore: /^.*$/ }
            tags: { only: /^v.*$/ }
          requires:
            - shellcheck/check
            - test-and-scan
            - install-and-run

jobs:
  package:
    docker:
      - image: cimg/node:20.8
    environment:
      npm_config_cache: /home/circleci/cache/node_modules_cache
    steps:
      - checkout
      - restore-package-cache
      - run: .circleci/package.sh
      - persist-to-workspace
      - save-package-cache
  test-and-scan:
    <<: *oe-version-param
    docker:
      - image: kherring/ablunit-test-runner:<< parameters.oe-version >>
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - restore-test-cache:
          oe-version: << parameters.oe-version >>
      - attach_workspace: { at: . }
      - run: .circleci/run_test_wrapper.sh
      - store-test-results
      - <<: *store-artifacts
      - when:
          condition:
            equal: [ << parameters.oe-version >>, '12.2.12' ]
          steps:
            - sonarcloud/scan:
                cache_version: 3
      - run: npm run clean
      - save-test-cache:
          oe-version: << parameters.oe-version >>
  install-and-run:
    <<: *oe-version-param
    executor: psc-primary
    steps:
      - checkout
      - restore-test-cache
      - attach_workspace: { at: . }
      - run: .circleci/install_and_run.sh
      - store-test-results:
          directory: dummy-ext/artifacts
      - <<: *store-artifacts
  publish:
    docker:
      - image: cimg/node:20.8
    steps:
      - checkout
      - attach_workspace: { at: . }
      - run: .circleci/publish.sh
      - <<: *store-artifacts
