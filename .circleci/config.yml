version: 2.1

orbs:
  shellcheck: circleci/shellcheck@3.2.0
  sonarcloud: sonarsource/sonarcloud@2.0.0

workflows:
  build:
    jobs:
      - shellcheck/check
      - test-and-scan:
          context:
            - DockerHub
            - PROGRESS_CFG
            - SonarCloud
          filters:
            tags:
              only:
                - /^v.*/
      - package-and-publish:
          requires:
            - test-and-scan
            - shellcheck/check
          context:
            - Azure_PAT
          filters:
            tags:
              only:
                - /^v.*/

jobs:
  test-and-scan:
    docker:
      - image: kherring/ablunit-test-runner
        auth:
          username: kherring
          password: $DOCKERHUB_TOKEN
    steps:
      - run: tr ' ' '\n' \<<< "$PROGRESS_CFG_BASE64" | base64 --decode > /psc/dlc/progress.cfg
      - checkout
      - restore_cache:
          keys:
            - v1-nodemodules-{{ checksum "package.json" }}
            - v1-nodemodules-
      - restore_cache:
          keys:
            - v1-vscode-test-1.84.2
      - run: .circleci/run_test_wrapper.sh
      - store_test_results:
          when: always
          path: artifacts/
      - store_artifacts:
          when: always
          path: artifacts/
      - sonarcloud/scan
      - run: .circleci/validate.sh
      - save_cache:
          key: v1-nodemodules-{{ checksum "package.json" }}
          paths:
            - node_modules
      - save_cache:
          key: v1-vscode-test-1.84.2
          paths:
            - .vscode-test
  package-and-publish:
    docker:
      - image: cimg/node:20.8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm install
      - run: sudo npm install -g @vscode/vsce
      - run: vsce package --pre-release --githubBranch main --allow-star-activation
      - run: vsce ls
      - when:
          condition: << pipeline.git.tag >>
          steps:
          - run:
              name: validate version matches tag
              command: |
                if [ "$(jq -r .version package.json)" != "${CIRCLE_TAG#v}" ]; then
                  echo "Version in package.json does not match tag"
                  exit 1
                fi
          - run: vsce publish --pre-release --packagePath ablunit-test-provider-*.vsix --githubBranch main --allow-star-activation
      - run: mkdir -p artifacts && cp ablunit-test-provider-*.vsix artifacts
      - store_artifacts:
          when: always
          path: artifacts
