version: 2.1

orbs:
  shellcheck: circleci/shellcheck@3.2.0
  sonarcloud: sonarsource/sonarcloud@2.0.0

parameters:
  cache-version:
    type: string
    default: v4
  vscode-version:
    type: string
    default: 1.84.2

oe-version-param: &oe-version-param
  parameters:
    oe-version:
      type: string
      enum: [ '12.2.12', '12.7.0' ]
      default: '12.2.12'
context-and-filters: &context-and-filters
  context:
    - DockerHub
    - PROGRESS_CFG
    - SonarCloud
    - Azure_PAT
  filters:
    tags: ## all tags starting with 'v' (all branches also included by default)
      only:
        - /^v.*/
store-artifacts: &store-artifacts
  - store_artifacts:
      when: always
      path: artifacts
store-results: &store-results
  - store_test_results:
      when: always
      path: artifacts
persist-to-workspace: &persist-to-workspace
  - persist_to_workspace:
      root: .
      paths:
        - dist
        - ./ablunit-test-runner-*.vsix

executors:
  psc-primary:
    docker:
      - image: kherring/ablunit-test-runner:12.2.12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN

commands:
  setup:
    steps:
      - checkout
      - attach_workspace:
          at: .
  restore-package-cache:
    steps:
      - restore_cache:
          keys:
            - << pipeline.parameters.cache-version >>-cache-{{ checksum "package.json" }}
            - << pipeline.parameters.cache-version >>-cache-
  save-package-cache:
    steps:
      - save_cache:
          key: << pipeline.parameters.cache-version >>-cache-{{ checksum "package.json" }}
          paths: [ /home/circleci/cache/node_modules_cache ]
  restore-test-cache:
    parameters:
      oe-version:
        type: string
        default: none
    steps:
      - when:
          condition: true
          steps:
            - run: tr ' ' '\n' \<<< "$PROGRESS_CFG_BASE64" | base64 --decode > /psc/dlc/progress.cfg
            - restore_cache:
                keys:
                  - << pipeline.parameters.cache-version >>-cache-<< parameters.oe-version >>-{{ checksum "package.json" }}
  save-test-cache:
    parameters:
      oe-version:
        type: string
        default: none
    steps:
      - save_cache:
          key: << pipeline.parameters.cache-version >>-cache-<< parameters.oe-version >>-{{ checksum "package.json" }}
          paths: [ cache ]

workflows:
  build:
    jobs:
      - shellcheck/check
      - package:
          <<: *context-and-filters
      - test-and-scan:
          <<: *context-and-filters
          matrix:
            parameters:
              oe-version: [ 12.2.12, 12.7.0 ]
          # name: test-and-scan_<< matrix.oe-version >>
          requires: [ 'package' ]
      - install-and-run:
          <<: *context-and-filters
          requires: [ 'package' ]
      - publish:
          filters:
            tags: { only: /^v.*/ }
            branches: { only: main }
          requires:
            - shellcheck/check
            - test-and-scan
            - install-and-run

jobs:
  package:
    docker:
      - image: cimg/node:20.8
    environment:
      npm_config_cache: /home/circleci/cache/node_modules_cache
    steps:
      - setup
      - restore-package-cache
      - run: .circleci/package.sh
      - <<: *persist-to-workspace
      - save-package-cache
  test-and-scan:
    <<: *oe-version-param
    docker:
      - image: kherring/ablunit-test-runner:<< parameters.oe-version >>
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - setup
      - restore-test-cache:
          oe-version: << parameters.oe-version >>
      - run: .circleci/run_test_wrapper.sh
      - <<: *store-results
      - <<: *store-artifacts
      - when:
          condition:
            equal: [ << parameters.oe-version >>, '12.2.12' ]
          steps:
            - sonarcloud/scan:
                cache_version: 3
      - run: npm run clean
      - save-test-cache:
          oe-version: << parameters.oe-version >>
  install-and-run:
    <<: *oe-version-param
    executor: psc-primary
    steps:
      - setup
      - restore-test-cache
      - run: scripts/install_and_run.sh
      - <<: *store-results
      - <<: *store-artifacts
  publish:
    docker:
      - image: cimg/node:20.8
    steps:
      - setup
      - run: git describe --tags
      - run:
          name: vsce publish
          command: |
            ## CIRCLE_BRANCH=$(git branch --show-current)
            ## CIRCLE_TAG=$(git describe --tags --abbrev=0)
            if [ -z "$CIRCLE_TAG" ]; then
              echo "exit: CIRCLE_TAG is empty, cannot publish release..."
              exit 1
            fi
            if [ ! -f ablunit-test-runner-${CIRCLE_TAG#v}.vsix ]; then
              echo "ERROR: ablunit-test-runner-${CIRCLE_TAG#v}.vsix not found, creating it now..."
              exit 1
            fi
            vsce publish --pre-release --githubBranch "main" --packagePath ablunit-test-runner-v${CIRCLE_TAG}.vsix
            ## TODO attach *.vsix to github release
      - <<: *store-artifacts
